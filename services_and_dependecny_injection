logging services
-------------

a service to log the data

> app
	> logging.service.ts

// create a serice class
// no need of @service decorator -since service is a typescript class
export class LoggingService{
    func(status: string){
        console.log(`A service status changed, new status: ${status}`);
    }
}


Accesing abve service
-------------
NEW-ACCOUNT-COMPOnent.ts
----------------------

import { LoggingService } from "../logging.service";

  onCreateAccount(accountName: string, accountStatus: string) {
    this.accountAdded.emit({
      name: accountName,
      status: accountStatus
    });
    const obj = new LoggingService();
    obj.func(accountStatus);
  }

 the abovemethod will work but dont access services like this
 by creating an object.

 Angular provide a better way to do the above.

using deependecy injection
------------------------
component depends on logginservices because component used to call method in loggingservices.

dependency injection injects an instance of loggingserves class to 
component automaticaly.

here compoenent inform angular that itrequeres an instancr of logginsevices classs.

component.ts
-----------
constructor(private logServices: LogginServices){}

>logServices is of type class 

>next gives providers to provide the
>insstance.
> pass class type to providers
provides: [LoggingServices]

>later acceess the method in LoggingServices class

this.logServices.func(status);


> this howinject a service to a component automatically


